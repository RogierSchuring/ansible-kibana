# {{ ansible_managed }}
#
#
# Kibana is served by a back end server. This setting specifies the port to use.
server.port: {{ kb_server_port }}

# Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.
# The default is 'localhost', which usually means remote machines will not be able to connect.
# To allow connections from remote users, set this parameter to a non-loopback address.
server.host: "{{ kb_server_host }}"

# Enables you to specify a path to mount Kibana at if you are running behind a proxy. This only affects
# the URLs generated by Kibana, your proxy is expected to remove the basePath value before forwarding requests
# to Kibana. This setting cannot end in a slash.
#server.basePath: ""

# The maximum payload size in bytes for incoming server requests.
server.maxPayloadBytes: {{ kb_server_maxPayloadBytes }}

# The Kibana server's name.  This is used for display purposes.
server.name: "{{ kb_node_name }}"

# The URL of the Elasticsearch instance to use for all your queries.
elasticsearch.url: "{{ kb_elasticsearch_url }}"

# When this setting’s value is true Kibana uses the hostname specified in the server.host
# setting. When the value of this setting is false, Kibana uses the hostname of the host
# that connects to this Kibana instance.
elasticsearch.preserveHost: {{ kb_elasticsearch_preserveHost }}

# Kibana uses an index in Elasticsearch to store saved searches, visualizations and
# dashboards. Kibana creates a new index if the index doesn’t already exist.
kibana.index: "{{ kb_kibana_index }}"

# The default application to load.
kibana.defaultAppId: "{{ kb_kibana_defaultAppId }}"

# If your Elasticsearch is protected with basic authentication, these settings provide
# the username and password that the Kibana server uses to perform maintenance on the Kibana
# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which
# is proxied through the Kibana server.
elasticsearch.username: "{{ kb_elasticsearch_username }}"
elasticsearch.password: "{{ kb_elasticsearch_password }}"

# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.
# These settings enable SSL for outgoing requests from the Kibana server to the browser.
server.ssl.enabled: {{ kb_server_ssl_enabled }}
{% if kb_server_ssl_cert is defined %}
server.ssl.certificate: {{ kb_server_ssl_cert }}
{% endif %}
{% if kb_server_ssl_key is defined %}
server.ssl.key: {{ kb_server_ssl_key }}
{% endif %}
{% if kb_server_ssl_keyPassphrase is defined %}
server.ssl.keyPassphrase: {{ kb_server_ssl_keyPassphrase }}
{% endif %}
# List of paths to PEM encoded certificate files that should be trusted.
{% if kb_server_ssl_ca is defined %}
server.ssl.certificateAuthorities: [{{ kb_server_ssl_ca | join(", ") }}]
{% endif %}
# Default: TLSv1, TLSv1.1, TLSv1.2 Supported protocols with versions. Valid protocols: TLSv1, TLSv1.1, TLSv1.2
{% if kb_ssl_protocols != "" %}
server.ssl.supportedProtocols: [{{ kb_ssl_protocols | join(", ") }}]
{% endif %}
# Default: ECDHE-RSA-AES128-GCM-SHA256, ECDHE-ECDSA-AES128-GCM-SHA256, ECDHE-RSA-AES256-GCM-SHA384, ECDHE-ECDSA-AES256-GCM-SHA384, DHE-RSA-AES128-GCM-SHA256, ECDHE-RSA-AES128-SHA256, DHE-RSA-AES128-SHA256, ECDHE-RSA-AES256-SHA384, DHE-RSA-AES256-SHA384, ECDHE-RSA-AES256-SHA256, DHE-RSA-AES256-SHA256, HIGH,!aNULL, !eNULL, !EXPORT, !DES, !RC4, !MD5, !PSK, !SRP, !CAMELLIA. Details on the format, and the valid options, are available via the [OpenSSL cipher list format documentation]
{% if kb_ssl_cipher_suites != "" %}
server.ssl.cipherSuites: [{{ kb_ssl_cipher_suites | join(", ") }}]
{% endif %}

# Default: false If authentication is enabled, setting this to true allows unauthenticated users to access the Kibana server status API and status page.
{% if kb_status_allowAnonymous is defined and kb_status_allowAnonymous %}
status.allowAnonymous: true
{% endif %}

# Optional settings that provide the paths to the PEM-format SSL certificate and key files.
# These files validate that your Elasticsearch backend uses the same key files.
{% if kb_elasticsearch_ssl_cert is defined %}
elasticsearch.ssl.certificate: {{ kb_elasticsearch_ssl_cert }}
{% endif %}
{% if kb_elasticsearch_ssl_key is defined %}
elasticsearch.ssl.key: {{ kb_elasticsearch_ssl_key }}
{% endif %}
{% if kb_elasticsearch_ssl_keyPass is defined %}
elasticsearch.ssl.keyPassphrase: {{ kb_elasticsearch_ssl_keyPass }}
{% endif %}

# Optional setting that enables you to specify a path to the PEM file for the certificate
# authority for your Elasticsearch instance.
{% if kb_elasticsearch_ssl_ca is defined %}
elasticsearch.ssl.certificateAuthorities: [{{ kb_elasticsearch_ssl_ca | join(", ") }}]
{% endif %}

# Default: full. Controls the verification of certificates. Valid values are none, certificate, and full.
# Full performs hostname verification, and certificate does not
{% if kb_elasticsearch_ssl_verificationMode is defined %}
elasticsearch.ssl.verificationMode: {{ kb_elasticsearch_ssl_verificationMode }}
{% endif %}

# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of
# the elasticsearch.requestTimeout setting.
elasticsearch.pingTimeout: {{ kb_elasticsearch_pingTimeout }}

# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value
# must be a positive integer.
elasticsearch.requestTimeout: {{ kb_elasticsearch_requestTimeout }}

# List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side
# headers, set this value to [] (an empty list).
{% if kb_elasticsearch_requestHeadersWhitelist is defined %}
elasticsearch.requestHeadersWhitelist: [{{ kb_elasticsearch_requestHeadersWhitelist | join(", ") }}]
{% endif %}

# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten
# by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.
{% if kb_elasticsearch_customHeaders is defined %}
elasticsearch.customHeaders: {{ kb_elasticsearch_customHeaders }}
{% endif %}

# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.
elasticsearch.shardTimeout: {{ kb_elasticsearch_shardTimeout }}

# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.
elasticsearch.startupTimeout: {{ kb_elasticsearch_startupTimeout }}

# Specifies the path where Kibana creates the process ID file.
pid.file: {{ kb_pid_dir }}/kibana.pid

# Enables you specify a file where Kibana stores log output.
logging.dest: {{ kb_log_dir }}/kibana.log

# Set the value of this setting to true to suppress all logging output.
logging.silent: {{ kb_logging_silent }}

# Set the value of this setting to true to suppress all logging output other than error messages.
logging.quiet: {{ kb_logging_quiet }}

# Set the value of this setting to true to log all events, including system usage information
# and all requests.
logging.verbose: {{ kb_logging_verbose }}

# Set the interval in milliseconds to sample system and process performance
# metrics. Minimum is 100ms. Defaults to 5000.
ops.interval: {{ kb_ops_interval }}

# The default locale. This locale can be used in certain circumstances to substitute any missing
# translations.
#i18n.defaultLocale: "en"

# Kibana ui's
{% if not kb_ui_timelion %}
timelion.enabled: false
{% endif %}

{% if not kb_ui_console %}
console.enabled: false
{% endif %}

# X-Pack configuration settings
{% if kb_enable_xpack %}
{% if not "graph" in kb_xpack_features %}
xpack.graph.enabled: false
{% endif %}

{% if not "ml" in kb_xpack_features %}
xpack.ml.enabled: false
{% endif %}

{% if not "monitoring" in kb_xpack_features %}
xpack.monitoring.enabled: false
{% else %}
xpack.monitoring.report_stats: false
{% if not kb_xpack_ui_monitoring %}
xpack.monitoring.ui.enabled: false
{% endif %}
{% endif %}

{% if not "reporting" in kb_xpack_features %}
xpack.reporting.enabled: false
{% endif %}

{% if "security" in kb_xpack_features %}
{% if kb_xpack_secure_cookies is defined %}
xpack.security.secureCookies: {{ kb_xpack_secure_cookies }}
{% endif %}
{% if kb_xpack_encryption_key is defined and kb_xpack_encryption_key !='' %}
xpack.security.encryptionKey: {{ kb_xpack_encryption_key }}
{% endif %}
{% else %}
xpack.security.enabled: false
{% endif %}

{% if not kb_xpack_ui_apm %}
xpack.apm.enabled: false
{% endif %}
{% endif %}
